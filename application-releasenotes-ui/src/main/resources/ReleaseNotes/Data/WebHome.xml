<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="ReleaseNotes.Data.WebHome" locale="">
  <web>ReleaseNotes.Data</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>ReleaseNotes.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1474376757000</creationDate>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1474640031000</date>
  <contentUpdateDate>1474640015000</contentUpdateDate>
  <version>1.1</version>
  <title>Release Notes Changes</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>= Generate Report =

Notes:
* Lists are allowed by using commas (e.g. "High,Medium")
* Wildcards are allowed (e.g. "8.3%")

{{velocity}}
#set ($topSpace = $doc.documentReference.extractFirstReference('SPACE').getName())
$!xwiki.jsx.use($doc.documentReference.toString())
{{html clean="false"}}
&lt;form action="$xwiki.getURL("${topSpace}.Code.Report")"&gt;
  &lt;input type="hidden" name="action" value="report"/&gt;
  &lt;select name="displayer"&gt;
    &lt;option value="grid"&gt;Grid&lt;/option&gt;
    &lt;option value="flow"&gt;Flow&lt;/option&gt;
    &lt;option value="simple"&gt;Simple&lt;/option&gt;
    &lt;option value="list"&gt;List&lt;/option&gt;
  &lt;/select&gt;
  &lt;input id="product" type="text" name="products" value="Products..." size="30" class="withTip"/&gt;
  &lt;input id="version" type="text" name="versions" value="Versions..." size="30" class="withTip"/&gt;
  &lt;input id="category" type="text" name="categories" value="Categories..." size="30" class="withTip"/&gt;
  &lt;input id="audience" type="text" name="audience" value="Audience..." size="30" class="withTip"/&gt;
  &lt;input id="importance" type="text" name="importance" value="Importance..." size="30" class="withTip"/&gt;
  &lt;input type="radio" name="containsScreenshots" value="true"&gt; With Screenshots
  &lt;input type="radio" name="containsScreenshots" value="false"&gt; Without Screenshots
  &lt;span class="buttonwrapper"&gt;
    &lt;input class="button" type="submit" value="Generate Report"/&gt;
  &lt;/span&gt;
&lt;/form&gt;
{{/html}}
{{/velocity}}

= Existing Changes =

{{velocity}}
  #set ($productName = $request.product)
  #if ("$!productName" == '')
    #set ($productName = "XWiki")
  #end
  ## Add new change
  #if ($request.action == 'add')
    #if ("$!request.version" == '')
      {{error}}Version must be set for creating a new Release Note change!{{/error}}

    #else
      ## Compute automatically a new page name, using the format "Change###" where ### is a zero-padded number.
      #set ($shortVersion = $stringtool.replaceChars($request.version, "-", ""))
      #set ($shortVersion = $stringtool.upperCase($shortVersion))
      #set ($shortVersion = $shortVersion.replace('MILESTONE', 'M'))
      #set ($versionSpaceReference = $services.model.createDocumentReference('', ["$topSpace", 'Data', "$productName", "$shortVersion"], 'WebHome').parent)
      #set ($versionSpaceReferenceString = $services.model.serialize($versionSpaceReference))
      ## Make sure we have existing entries, otherwise start at 1
      #set ($query = $services.query.xwql("from doc.object(${topSpace}.Code.ChangesClass) as changes where doc.space like :space").bindValue('space', "${versionSpaceReferenceString}%"))
      #if ($query.count() &gt; 0)
        #set ($highest = $services.query.xwql("from doc.object(${topSpace}.Code.ChangesClass) as changes where doc.space like '${versionSpaceReferenceString}%' order by doc.space desc").setLimit(1).execute())
        #set ($currentNumber = $numbertool.toNumber($services.model.resolveDocument($highest[0]).parent.name.substring(6)).intValue())
        #set ($nextUniqueNumber = $numbertool.format('000', $mathtool.add($currentNumber, 1)))
      #else
        #set ($nextUniqueNumber = '001')
      #end
      #set ($versionPageReference = "${versionSpaceReferenceString}.Change${nextUniqueNumber}.WebHome")
      $response.sendRedirect($xwiki.getURL($versionPageReference.toString(), 'inline', "$!{request.queryString}&amp;shortVersion=${escapetool.url($shortVersion)}"))
    #end
  #end
{{html clean='false'}}
&lt;form&gt;
  &lt;input type="hidden" name="action" value="add"/&gt;
  &lt;input type="hidden" name="template" value="${topSpace}.Code.ChangesTemplate"/&gt;
  &lt;input id="product2" type="text" name="product" value="XWiki" size="16"/&gt;
  &lt;input id="version2" type="text" name="version" value="Product version..." size="16" class="withTip"/&gt;
  &lt;span class="buttonwrapper"&gt;
    &lt;input class="button" type="submit" value="Add Change"/&gt;
  &lt;/span&gt;
&lt;/form&gt;
{{/html}}

#set($columns = ['doc.creationDate', 'product', 'version', 'category', 'audience', 'title', 'importance', 'summary' ])
#set($columnsProperties = {
  'doc.creationDate' : { 'type' : 'date', 'link' : true  },
  'product' : { 'type' : 'text', 'match': 'partial' },
  'version' : { 'type' : 'text', 'match': 'partial' },
  'category' : { 'type' : 'text', 'match': 'partial' },
  'audience' : { 'type' : 'text', 'match': 'partial' },
  'title' : { 'type' : 'text', 'sortable' : false },
  'importance' : { 'type' : 'text'},
  'summary' : { 'type' : 'text', 'html' : 'true', 'sortable' : false }
})
#set($options = { 
   "className" : "${topSpace}.Code.ChangesClass",
   "translationPrefix" : "releasenotes.changes.livetable.",
   "tagCloud" : true,
   "rowCount": 15
})
#livetable("releasenoteschanges" $columns $columnsProperties $options)
{{/velocity}}</content>
  <object>
    <name>ReleaseNotes.Data.WebHome</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>7a418dc1-5a02-422e-90e9-7cfa4a6db629</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <customDisplay/>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <picker>0</picker>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <customDisplay/>
        <disabled>0</disabled>
        <editor>---</editor>
        <name>code</name>
        <number>2</number>
        <picker>0</picker>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <customDisplay/>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <customDisplay/>
        <defaultValue/>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <customDisplay/>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <picker>0</picker>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>(function(){
  document.observe('dom:loaded', function () {
    if($('version')) {
      Event.observe($('version'), "focus", function() {
        new XWiki.widgets.Suggest(this, {
             script: '$xwiki.getURL("${doc.space}.WebHome", "view")?xpage=suggest&amp;classname=ReleaseNotes.Code.ChangesClass&amp;fieldname=version&amp;secCol=-&amp;',
             varname: "input", 
             seps: " ,|",
             offsety: 13
        });
      });
    }
    if($('version2')) {
      Event.observe($('version2'), "focus", function() {
        new XWiki.widgets.Suggest(this, {
             script: '$xwiki.getURL("${doc.space}.WebHome", "view")?xpage=suggest&amp;classname=ReleaseNotes.Code.ChangesClass&amp;fieldname=version&amp;secCol=-&amp;',
             varname: "input", 
             seps: " ,|",
             offsety: 13
        });
      });
    }
    if($('category')) {
      Event.observe($('category'), "focus", function() {
        new XWiki.widgets.Suggest(this, {
             script: '$xwiki.getURL("${doc.space}.WebHome", "view")?xpage=suggest&amp;classname=ReleaseNotes.Code.ChangesClass&amp;fieldname=category&amp;secCol=-&amp;',
             varname: "input", 
             seps: " ,|",
             offsety: 13
        });
      });
    }
    if($('product')) {
      Event.observe($('product'), "focus", function() {
        new XWiki.widgets.Suggest(this, {
             script: '$xwiki.getURL("${doc.space}.WebHome", "view")?xpage=suggest&amp;classname=ReleaseNotes.Code.ChangesClass&amp;fieldname=product&amp;secCol=-&amp;',
             varname: "input", 
             seps: " ,|",
             offsety: 13
        });
      });
    }
    if($('product2')) {
      Event.observe($('product2'), "focus", function() {
        new XWiki.widgets.Suggest(this, {
             script: '$xwiki.getURL("${doc.space}.WebHome", "view")?xpage=suggest&amp;classname=ReleaseNotes.Code.ChangesClass&amp;fieldname=product&amp;secCol=-&amp;',
             varname: "input", 
             seps: " ,|",
             offsety: 13
        });
      });
    }
    if($('audience')) {
      Event.observe($('audience'), "focus", function() {
        new XWiki.widgets.Suggest(this, {
             script: '$xwiki.getURL("${doc.space}.WebHome", "view")?xpage=suggest&amp;classname=ReleaseNotes.Code.ChangesClass&amp;fieldname=audience&amp;secCol=-&amp;',
             varname: "input", 
             seps: " ,|",
             offsety: 13
        });
      });
    }
    if($('importance')) {
      Event.observe($('importance'), "focus", function() {
        new XWiki.widgets.Suggest(this, {
             script: '$xwiki.getURL("${doc.space}.WebHome", "view")?xpage=suggest&amp;classname=ReleaseNotes.Code.ChangesClass&amp;fieldname=importance&amp;secCol=-&amp;',
             varname: "input", 
             seps: " ,|",
             offsety: 13
        });
      });
    }
  }); // end of doc observe
})();</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
